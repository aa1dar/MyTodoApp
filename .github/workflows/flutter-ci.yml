name: Flutter CI
on: push

jobs:
  analyze:
    name: Run analyzer and formatter
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.10.2"
          cache: true
      - run: flutter pub get
      - name: Decode .env
        env:
          dotenv: ${{ secrets.DOTENV }}
        run: echo "$dotenv" > ".env"
      - run: flutter pub run build_runner build
      - run: flutter analyze
      - run: dart format --set-exit-if-changed .
  test:
    name: Run tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.10.2"
          cache: true
      - run: flutter pub get
      - name: Decode .env
        env:
          dotenv: ${{ secrets.DOTENV }}
        run: echo "$dotenv" > ".env"
      - run: flutter pub run build_runner build
      - run: flutter test
        id: test
      - if: ${{ failure() && steps.test.conclusion == 'failure' }}
        name: "Upload test failures"
        uses: actions/upload-artifact@v3
        with:
          name: test-failures
          path: test/failures
          retention-days: 2
  build:
    needs: [analyze, test]
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json
      - name: Decode firebase_option
        env:
          firebase_options_dart: ${{secrets.FIREBASE_OPTION}}
        run: echo "$firebase_options_dart" > lib/firebase_options.dart
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.10.2"
          cache: true
      - run: flutter pub get
      - name: Decode .env
        env:
          dotenv: ${{ secrets.DOTENV }}
        run: echo "$dotenv" > ".env"
      - run: flutter pub run build_runner build
      - run: flutter build apk --dart-define="DEFINE_APP_FLAVOR=prod"
